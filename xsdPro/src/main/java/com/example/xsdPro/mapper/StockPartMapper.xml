<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.xsdPro.dao.StockPartMapper">
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.xsdPro.model.StockPart">
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="branch_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="store_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="part_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unit_id" javaType="java.lang.String" jdbcType="NCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="in_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="in_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_person_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_id, branch_id, store_id, part_id, amount, unit_id, price, in_person_id, in_date, 
    update_person_id, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.xsdPro.model.StockPartKey">
    delete from tbl_stock_part
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part (company_id, branch_id, store_id, 
      part_id, amount, unit_id, 
      price, in_person_id, in_date, 
      update_person_id, update_date)
    values (#{companyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{partId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{unitId,jdbcType=NCHAR}, 
      #{price,jdbcType=DECIMAL}, #{inPersonId,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{updatePersonId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xsdPro.model.StockPart">
    insert into tbl_stock_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inPersonId != null">
        in_person_id,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="updatePersonId != null">
        update_person_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=NCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="inPersonId != null">
        in_person_id = #{inPersonId,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePersonId != null">
        update_person_id = #{updatePersonId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xsdPro.model.StockPart">
    update tbl_stock_part
    set amount = #{amount,jdbcType=DECIMAL},
      unit_id = #{unitId,jdbcType=NCHAR},
      price = #{price,jdbcType=DECIMAL},
      in_person_id = #{inPersonId,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      update_person_id = #{updatePersonId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=INTEGER}
      and branch_id = #{branchId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
      and part_id = #{partId,jdbcType=INTEGER}
  </update>
</mapper>